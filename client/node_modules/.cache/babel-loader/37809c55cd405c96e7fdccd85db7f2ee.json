{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\gmorais\\\\Documents\\\\react-web\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\gmorais\\\\Documents\\\\react-web\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gmorais\\\\Documents\\\\react-web\\\\client\\\\src\\\\components\\\\Home\\\\Main\\\\NewPost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport textareaAutoHeight from '../../tools/textareaAutoHeight';\nimport image from '../../assets/img_addimage.png';\nexport default (props => {\n  const _React$useState = React.useState({\n    body: '',\n    image: ''\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        newPost = _React$useState2[0],\n        setNewPost = _React$useState2[1];\n\n  React.useEffect(() => {\n    textareaAutoHeight('.NewPost-textdiv');\n  }, []);\n\n  function handleNewPost(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setNewPost(_objectSpread({}, newPost, {\n      [name]: e.target.files ? e.target.files[0] : value\n    }));\n  }\n\n  function handlePublish() {\n    if (Object.keys(newPost).length > 0) {\n      var form = new FormData();\n      form.append('image', newPost.image);\n      form.append('body', newPost.body);\n      form.append('username', userInfos.username);\n      form.append('owner', userInfos.firstName + ' ' + userInfos.lastName);\n      form.append('date', new Date());\n      $.ajax({\n        url: \"\".concat(config.api, \"/insertPost\"),\n        method: 'post',\n        data: form,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: r => {\n          if (r.done) {\n            setNewPost({\n              body: '',\n              image: ''\n            });\n            getPosts();\n          }\n        }\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"NewPost\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"NewPost-textdiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    value: props.newPost.body,\n    onChange: props.handleNewPost,\n    name: \"body\",\n    className: \"NewPost-text\",\n    placeholder: \"Tell us what are you thinking...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"NewPost-viewImage\",\n    style: {\n      display: props.newPost.image ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.newPost.image ? URL.createObjectURL(props.newPost.image) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"NewPost-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"NewPost-imageLbl\",\n    htmlFor: \"NewPost-addImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: image,\n    className: \"img_actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"image\",\n    type: \"file\",\n    accept: \".png, .jpg, .jpeg, .gif, .svg\",\n    id: \"NewPost-addImage\",\n    onChange: props.handleNewPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"a\", {\n    onClick: props.handlePublish,\n    style: {\n      color: props.newPost.body || props.newPost.image ? 'black' : 'grey'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Publish\"))));\n});","map":{"version":3,"sources":["C:/Users/gmorais/Documents/react-web/client/src/components/Home/Main/NewPost.js"],"names":["React","textareaAutoHeight","image","props","useState","body","newPost","setNewPost","useEffect","handleNewPost","e","target","name","value","files","handlePublish","Object","keys","length","form","FormData","append","userInfos","username","firstName","lastName","Date","$","ajax","url","config","api","method","data","cache","contentType","processData","success","r","done","getPosts","display","URL","createObjectURL","color"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport textareaAutoHeight from '../../tools/textareaAutoHeight'\r\nimport image from '../../assets/img_addimage.png'\r\n\r\n\r\nexport default props => {\r\n\r\n  const [newPost, setNewPost] = React.useState({body: '', image: ''})\r\n\r\n  React.useEffect(() => {\r\n    textareaAutoHeight('.NewPost-textdiv')\r\n  }, [])\r\n\r\n  function handleNewPost(e) {\r\n    const {name, value} = e.target\r\n\r\n    setNewPost({\r\n      ...newPost,\r\n      [name]: e.target.files ? e.target.files[0] : value\r\n    })\r\n  }\r\n\r\n  function handlePublish() {\r\n    if (Object.keys(newPost).length > 0) {\r\n      var form = new FormData()\r\n      form.append('image', newPost.image)\r\n      form.append('body', newPost.body)\r\n      form.append('username', userInfos.username)\r\n      form.append('owner', userInfos.firstName + ' ' + userInfos.lastName)\r\n      form.append('date', new Date())\r\n      \r\n      $.ajax({\r\n        url: `${config.api}/insertPost`,\r\n        method: 'post',\r\n        data: form,\r\n        cache: false,\r\n        contentType: false,\r\n        processData: false,\r\n        success: r => {\r\n          if (r.done) {\r\n            setNewPost({body: '', image: ''})\r\n            getPosts()\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"NewPost\">\r\n      <form>\r\n        <div id=\"NewPost-textdiv\">\r\n          <textarea value={props.newPost.body} onChange={props.handleNewPost} name=\"body\" className=\"NewPost-text\" placeholder=\"Tell us what are you thinking...\" />\r\n        </div>\r\n        <div className=\"NewPost-viewImage\" style={{display: props.newPost.image ? 'block' : 'none'}}>\r\n          <img src={ props.newPost.image ? URL.createObjectURL(props.newPost.image) : null } />\r\n        </div>\r\n        <div id=\"NewPost-actions\">\r\n          <label className=\"NewPost-imageLbl\" htmlFor=\"NewPost-addImage\">\r\n            <img src={image} className=\"img_actions\"/>\r\n            <input name=\"image\" type=\"file\" accept=\".png, .jpg, .jpeg, .gif, .svg\" id=\"NewPost-addImage\" onChange={props.handleNewPost} />\r\n          </label>\r\n          <a onClick={props.handlePublish} style={{color: props.newPost.body || props.newPost.image ? 'black' : 'grey'}}>Publish</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}