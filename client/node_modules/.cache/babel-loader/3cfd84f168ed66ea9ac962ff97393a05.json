{"ast":null,"code":"import _slicedToArray from \"D:\\\\Programing\\\\react\\\\react-web\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Programing\\\\react\\\\react-web\\\\client\\\\src\\\\components\\\\Home\\\\Account\\\\index.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport config from '../../config';\nimport UserInfos from './UserInfos';\nimport Post from '../Main/Post';\nimport './master.css';\nexport default (props => {\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        profile = _React$useState2[0],\n        setProfile = _React$useState2[1];\n\n  const userInfos = JSON.parse(localStorage.getItem('@react-web/userInfos'));\n  React.useEffect(() => {\n    getProfile();\n    getPosts();\n  }, []);\n\n  const getProfile = () => {\n    $.post(config.api + '/getUsers', {\n      username: userInfos.username\n    }, r => {\n      setProfile(r.r.map(data => React.createElement(UserInfos, {\n        key: data._id,\n        inf: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })));\n    });\n  };\n\n  function mountPosts() {\n    var data = postsData.map(post => React.createElement(Post, {\n      key: post._id,\n      _id: post._id,\n      username: post.username,\n      owner: post.owner,\n      body: post.body,\n      image: post.image,\n      date: post.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n    setPosts(data);\n  }\n\n  function getPosts(limit = 50, find = {}) {\n    console.log('Getting posts ...');\n    $.get(\"\".concat(config.api, \"/getPosts\"), {\n      limit: limit,\n      find: find\n    }, r => {\n      var oldData = postsData; // Merge if needed the old data with the new\n\n      if (!oldData) oldData = r.r;else Array.prototype.unshift.apply(oldData, r.r); // Remove duplicates\n\n      oldData = [...new Set(oldData)];\n      setPostsData(oldData);\n      mountPosts();\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, profile ? profile : null, React.createElement(Post, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["D:/Programing/react/react-web/client/src/components/Home/Account/index.js"],"names":["React","$","config","UserInfos","Post","props","useState","profile","setProfile","userInfos","JSON","parse","localStorage","getItem","useEffect","getProfile","getPosts","post","api","username","r","map","data","_id","mountPosts","postsData","owner","body","image","date","setPosts","limit","find","console","log","get","oldData","Array","prototype","unshift","apply","Set","setPostsData"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,cAAP;AAGA,gBAAeC,KAAK,IAAI;AAAA,0BAEQL,KAAK,CAACM,QAAN,EAFR;AAAA;AAAA,QAEfC,OAFe;AAAA,QAENC,UAFM;;AAGtB,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAX,CAAlB;AAEAb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBC,IAAAA,UAAU;AACVC,IAAAA,QAAQ;AACT,GAHD,EAGG,EAHH;;AAKA,QAAMD,UAAU,GAAG,MAAM;AACvBd,IAAAA,CAAC,CAACgB,IAAF,CAAOf,MAAM,CAACgB,GAAP,GAAa,WAApB,EAAiC;AAACC,MAAAA,QAAQ,EAAEV,SAAS,CAACU;AAArB,KAAjC,EAAiEC,CAAC,IAAI;AACpEZ,MAAAA,UAAU,CAACY,CAAC,CAACA,CAAF,CAAIC,GAAJ,CAAQC,IAAI,IAAK,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,IAAI,CAACC,GAArB;AAA0B,QAAA,GAAG,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB,CAAD,CAAV;AACD,KAFD;AAGD,GAJD;;AAMA,WAASE,UAAT,GAAsB;AACpB,QAAIF,IAAI,GAAGG,SAAS,CAACJ,GAAV,CAAcJ,IAAI,IAC3B,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACM,GAAhB;AAAqB,MAAA,GAAG,EAAEN,IAAI,CAACM,GAA/B;AAAoC,MAAA,QAAQ,EAAEN,IAAI,CAACE,QAAnD;AAA6D,MAAA,KAAK,EAAEF,IAAI,CAACS,KAAzE;AAAgF,MAAA,IAAI,EAAET,IAAI,CAACU,IAA3F;AAAiG,MAAA,KAAK,EAAEV,IAAI,CAACW,KAA7G;AAAoH,MAAA,IAAI,EAAEX,IAAI,CAACY,IAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAAX;AAIAC,IAAAA,QAAQ,CAACR,IAAD,CAAR;AACD;;AAED,WAASN,QAAT,CAAkBe,KAAK,GAAG,EAA1B,EAA8BC,IAAI,GAAG,EAArC,EAAyC;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAjC,IAAAA,CAAC,CAACkC,GAAF,WAASjC,MAAM,CAACgB,GAAhB,gBAAgC;AAACa,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,IAAI,EAAEA;AAArB,KAAhC,EAA4DZ,CAAC,IAAI;AAC/D,UAAIgB,OAAO,GAAGX,SAAd,CAD+D,CAG/D;;AACA,UAAI,CAACW,OAAL,EAAcA,OAAO,GAAGhB,CAAC,CAACA,CAAZ,CAAd,KACKiB,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,KAAxB,CAA8BJ,OAA9B,EAAuChB,CAAC,CAACA,CAAzC,EAL0D,CAO/D;;AACAgB,MAAAA,OAAO,GAAG,CAAC,GAAG,IAAIK,GAAJ,CAAQL,OAAR,CAAJ,CAAV;AAEAM,MAAAA,YAAY,CAACN,OAAD,CAAZ;AACAZ,MAAAA,UAAU;AACX,KAZD;AAaD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,OAAO,GAAGA,OAAH,GAAa,IADvB,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CAjDD","sourcesContent":["import React from 'react'\r\nimport $ from 'jquery'\r\nimport config from '../../config'\r\nimport UserInfos from './UserInfos'\r\nimport Post from '../Main/Post'\r\nimport './master.css'\r\n\r\n\r\nexport default props => {\r\n\r\n  const [profile, setProfile] = React.useState();\r\n  const userInfos = JSON.parse(localStorage.getItem('@react-web/userInfos'));\r\n\r\n  React.useEffect(() => {\r\n    getProfile()\r\n    getPosts()\r\n  }, [])\r\n\r\n  const getProfile = () => {\r\n    $.post(config.api + '/getUsers', {username: userInfos.username}, r => {\r\n      setProfile(r.r.map(data => (<UserInfos key={data._id} inf={data} />)))\r\n    });\r\n  }\r\n\r\n  function mountPosts() {\r\n    var data = postsData.map(post => (\r\n      <Post key={post._id} _id={post._id} username={post.username} owner={post.owner} body={post.body} image={post.image} date={post.date} />\r\n    ))\r\n\r\n    setPosts(data)\r\n  }\r\n\r\n  function getPosts(limit = 50, find = {}) {\r\n    console.log('Getting posts ...')\r\n\r\n    $.get(`${config.api}/getPosts`, {limit: limit, find: find}, r => {\r\n      var oldData = postsData\r\n\r\n      // Merge if needed the old data with the new\r\n      if (!oldData) oldData = r.r\r\n      else Array.prototype.unshift.apply(oldData, r.r)\r\n      \r\n      // Remove duplicates\r\n      oldData = [...new Set(oldData)]\r\n\r\n      setPostsData(oldData)\r\n      mountPosts()\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <div className=\"Account\">\r\n      {profile ? profile : null}\r\n      <Post />\r\n    </div>\r\n  );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}